<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="ConfirmDeleteConfiguration" xml:space="preserve">
    <value>Are you sure you want to delete configuration '{0}'?</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="DuplicateConfigurationName" xml:space="preserve">
    <value>Copy of {0}</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="CopyingFilesTitle" xml:space="preserve">
    <value>Copying Files</value>
  </data>
  <data name="FromSource" xml:space="preserve">
    <value>From: {0}</value>
  </data>
  <data name="ToDestination" xml:space="preserve">
    <value>To: {0}</value>
  </data>
  <data name="AtoB" xml:space="preserve">
    <value>{0}: {1}</value>
  </data>
  <data name="UnableToDetectRemoteLockingProcesses" xml:space="preserve">
    <value>Note: Unable to detect locking processes on remote server.</value>
  </data>
  <data name="StoppingLockingProcessesTitle" xml:space="preserve">
    <value>Stopping Locking Processes and Services</value>
  </data>
  <data name="FoundLockedFile" xml:space="preserve">
    <value>Found locked file: {0}</value>
  </data>
  <data name="StoppingLockingService" xml:space="preserve">
    <value>Stopping locking service '{0}'...</value>
  </data>
  <data name="KillingLockingProcess" xml:space="preserve">
    <value>Killing locking process '{0}'...</value>
  </data>
  <data name="WaitingForLockingProcessToStop" xml:space="preserve">
    <value>Waiting for locking process '{0}' to stop...</value>
  </data>
  <data name="ErrorCopyingSourceToDestination" xml:space="preserve">
    <value>Error copying {0} to {1}</value>
  </data>
  <data name="RestartingStoppedProcessesTitle" xml:space="preserve">
    <value>Restarting Stopped Processes and Services</value>
  </data>
  <data name="RestartingStoppedService" xml:space="preserve">
    <value>Restarting stopped service '{0}'...</value>
  </data>
  <data name="ErrorRestartingService" xml:space="preserve">
    <value>Error restarting service '{0}'</value>
  </data>
  <data name="RestartingKilledProcess" xml:space="preserve">
    <value>Restarting killed process '{0}'...</value>
  </data>
  <data name="ErrorRestartingProcess" xml:space="preserve">
    <value>Error restarting process '{0}'</value>
  </data>
  <data name="ErrorStoppingLockingService" xml:space="preserve">
    <value>Error stopping locking service {0}</value>
  </data>
  <data name="AutomaticallyStopLockingProcesses" xml:space="preserve">
    <value>Automatically stop locking processes</value>
  </data>
  <data name="WaitForLockingProcesses" xml:space="preserve">
    <value>Wait for locking processes to stop</value>
  </data>
  <data name="SkipLockedFiles" xml:space="preserve">
    <value>Skipped locked files</value>
  </data>
  <data name="ViewAllFiles" xml:space="preserve">
    <value>View all files</value>
  </data>
  <data name="ViewPendingFiles" xml:space="preserve">
    <value>View files which will be copied</value>
  </data>
  <data name="ViewExcludedFiles" xml:space="preserve">
    <value>View files which will be excluded</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="GeneralSettingsDescription" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="CopySettingsDescription" xml:space="preserve">
    <value>Copy Settings</value>
  </data>
  <data name="LockedFileSettingsDescription" xml:space="preserve">
    <value>Locked File Settings</value>
  </data>
  <data name="ViewSettingsDescription" xml:space="preserve">
    <value>View Settings</value>
  </data>
  <data name="EnabledSettingDescription" xml:space="preserve">
    <value>Enabled:</value>
  </data>
  <data name="IncludeDirectoriesSettingDescription" xml:space="preserve">
    <value>Include directories:</value>
  </data>
  <data name="IncludeDirectoriesSettingExtendedDescription" xml:space="preserve">
    <value>Directories are all-or-nothing, meaning that if a source directory is newer than a destination directory, all of its contents will be copied and replace all of the destination contents.</value>
  </data>
  <data name="UpdateLiveSettingDescription" xml:space="preserve">
    <value>Update live:</value>
  </data>
  <data name="LeftButNotRightSettingDescription" xml:space="preserve">
    <value>If file exists on left but not on right:</value>
  </data>
  <data name="NewerOnLeftSettingDescription" xml:space="preserve">
    <value>If file is newer on left:</value>
  </data>
  <data name="NewerOnRightSettingDescription" xml:space="preserve">
    <value>If file is newer on right:</value>
  </data>
  <data name="ExclusionsListSettingDescription" xml:space="preserve">
    <value>Exclusions list:</value>
  </data>
  <data name="ExclusionsListSettingExtendedDescription" xml:space="preserve">
    <value>Specify a set of file names or patterns to exclude. One exclusion per line. Use * as wildcard.

For example:
*.exe
*.config

If a file matches both inclusions and exclusions list, it will be excluded.</value>
    </data>
  <data name="InclusionsListSettingDescription" xml:space="preserve">
    <value>Inclusions list:</value>
  </data>
    <data name="InclusionsListSettingExtendedDescription" xml:space="preserve">
    <value>Specify a set of file names or patterns to include. One exclusion per line. Use * as wildcard.

For example:
*.exe
*.config

If a file matches both inclusions and exclusions list, it will be excluded.</value>
  </data>
  <data name="LockedFileOptionSettingDescription" xml:space="preserve">
    <value>If destination file is locked:</value>
  </data>
  <data name="LockedFileOptionSettingExtendedDescription" xml:space="preserve">
    <value>Note: Unable to detect or automatically stop locking processes when copying to a remote server.</value>
  </data>
  <data name="KilledProcessesSettingDescription" xml:space="preserve">
    <value>Automatically restart killed processes:</value>
  </data>
  <data name="FileViewOptionsSettingDescription" xml:space="preserve">
    <value>File view options:</value>
  </data>
  <data name="NewConfigurationName" xml:space="preserve">
    <value>New Configuration</value>
  </data>
  <data name="FileMatchesExclusionPattern" xml:space="preserve">
    <value>{0} matches exclusion pattern or does not match inclusion pattern and will not be copied.</value>
  </data>
  <data name="FileExistsOnOtherSize" xml:space="preserve">
    <value>{0} exists only on other side.</value>
  </data>
  <data name="FileIsNewerThanOtherSide" xml:space="preserve">
    <value>{0} is newer than matching {1} on other side.</value>
  </data>
  <data name="FileIsOlderThanOtherSize" xml:space="preserve">
    <value>{0} is older than matching {1} on other side.</value>
  </data>
  <data name="FullPath" xml:space="preserve">
    <value>Full path: {0}</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size: {0} bytes</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>unknown</value>
  </data>
  <data name="LastModifiedAt" xml:space="preserve">
    <value>Last modified at: {0}</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="AddDirectory" xml:space="preserve">
    <value>Add directory</value>
  </data>
  <data name="RemoveDirectory" xml:space="preserve">
    <value>Remove directory</value>
  </data>
  <data name="PathDoesNotExist" xml:space="preserve">
    <value>Path does not exist</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="AddValue" xml:space="preserve">
    <value>Add value</value>
  </data>
  <data name="RemoveValue" xml:space="preserve">
    <value>Remove value</value>
  </data>
  <data name="ChooseValues" xml:space="preserve">
    <value>Choose value(s)</value>
  </data>
  <data name="AutomaticallyCloseAfterError" xml:space="preserve">
    <value>Automatically close after errors</value>
  </data>
  <data name="AutomaticallyCloseAfterErrorTooltip" xml:space="preserve">
    <value>Check to automatically close the dialog when a copy fails with errors</value>
  </data>
  <data name="CreateConfiguration" xml:space="preserve">
    <value>Create new configuration</value>
  </data>
  <data name="DeleteConfiguration" xml:space="preserve">
    <value>Delete selected configuration</value>
  </data>
  <data name="MoveConfigurationUp" xml:space="preserve">
    <value>Move selected configuration item up</value>
  </data>
  <data name="MoveConfigurationDown" xml:space="preserve">
    <value>Move selected configuration item down</value>
  </data>
  <data name="AddPathVariable" xml:space="preserve">
    <value>Add new path variable</value>
  </data>
  <data name="DeletePathVariable" xml:space="preserve">
    <value>Delete selected path variable</value>
  </data>
  <data name="ViewLastErrorDetails" xml:space="preserve">
    <value>View last error details</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="PathVariables" xml:space="preserve">
    <value>Path Variables</value>
  </data>
  <data name="SourceDirectories" xml:space="preserve">
    <value>Source Directory(s)</value>
  </data>
  <data name="DestinationDirectories" xml:space="preserve">
    <value>Destination Directory(s)</value>
  </data>
  <data name="Deploy" xml:space="preserve">
    <value>Deploy</value>
  </data>
  <data name="DeployTooltip" xml:space="preserve">
    <value>Deploy ({0})</value>
  </data>
  <data name="PreparingToDeploy" xml:space="preserve">
    <value>Preparing to Deploy</value>
  </data>
  <data name="DeployEncounteredErrors" xml:space="preserve">
    <value>Deploy encountered {0} errors(s).</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error: {0}</value>
  </data>
  <data name="TheOperationWasCanceled" xml:space="preserve">
    <value>The operation was canceled.</value>
  </data>
  <data name="RefreshTooltip" xml:space="preserve">
    <value>Refresh ({0})</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="ErrorLoadingExistingConfiguration" xml:space="preserve">
    <value>There was an error loading the existing configuration file. It has been backed up, and a new empty configuration file has been created.</value>
  </data>
  <data name="OldConfigurationAvailableAt" xml:space="preserve">
    <value>The old configuration file is available at:</value>
  </data>
  <data name="ViewSessionLog" xml:space="preserve">
    <value>View session log...</value>
  </data>
  <data name="BeginningDeployment" xml:space="preserve">
    <value>Beginning Deployment</value>
  </data>
  <data name="FinishedDeployment" xml:space="preserve">
    <value>Finished Deployment</value>
  </data>
  <data name="UnhandledError" xml:space="preserve">
    <value>Encountered unhandled error.</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="NoOperation" xml:space="preserve">
    <value>Deployment found no files to copy. No operation was performed.</value>
  </data>
  <data name="OptionSelectedToolTip" xml:space="preserve">
    <value>Check to enable or uncheck to disable this option</value>
  </data>
  <data name="NextConfigurationSettingExtendedDescription" xml:space="preserve">
    <value>Choose another configuration to deploy automatically after deploying the current config.</value>
  </data>
  <data name="NextConfigurationSettingDescription" xml:space="preserve">
    <value>Next configuration to deploy:</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DeployerTitle" xml:space="preserve">
    <value>Deployer  {0}</value>
    <comment>{0} is the version number</comment>
  </data>
  <data name="StopServiceMethodSettingDescription" xml:space="preserve">
    <value>How to handle locking services:</value>
  </data>
  <data name="GracefulShutdown" xml:space="preserve">
    <value>Wait for graceful shutdown</value>
  </data>
  <data name="Kill" xml:space="preserve">
    <value>Kill</value>
  </data>
  <data name="StopServiceMethodSettingExtendedDescription" xml:space="preserve">
    <value>Choose how to handle Windows services which are locking the destination file. Note that normal (non-service) processes are never killed gracefully.</value>
  </data>
</root>