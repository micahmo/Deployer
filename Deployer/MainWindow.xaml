<Window x:Class="Deployer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Deployer"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        mc:Ignorable="d"
        Title="Deployer"
        Closing="Window_Closing"
        WindowState="{Binding Configuration.WindowState}"
        Width="{Binding Configuration.WindowSize.Width}"
        Height="{Binding Configuration.WindowSize.Height}"
        WindowStartupLocation="Manual"
        Left="{Binding Configuration.WindowLocation.X}"
        Top="{Binding Configuration.WindowLocation.Y}"
        SizeChanged="MainWindow_OnSizeChanged">

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:ShortcutCommands.ReloadCurrentConfigurationCommand}" Executed="ReloadCurrentConfigurationCommand_Executed"/>
        <CommandBinding Command="{x:Static local:ShortcutCommands.DeployCurrentConfigurationCommand}" Executed="DeployCurrentConfigurationCommand_Executed"/>
    </Window.CommandBindings>

    <Window.Resources>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="LeftTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- This is the part I edited (specifically HorizontalAlignment and MaxWidth) so that the tabs don't overlap with the count label -->
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"
                                      HorizontalAlignment="Left"
                                      MaxWidth="{Binding LeftTabControlMaxWidth}"
                            />
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RightTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- This is the part I edited (specifically HorizontalAlignment and MaxWidth) so that the tabs don't overlap with the count label -->
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"
                                      HorizontalAlignment="Left"
                                      MaxWidth="{Binding RightTabControlMaxWidth}"
                            />
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <xctk:BusyIndicator IsBusy="{Binding IsBusy}">
        <xctk:BusyIndicator.BusyContentTemplate>
            <DataTemplate>
                <StackPanel Width="{Binding DataContext.BusyIndicatorWidth, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">

                    <TextBlock FontWeight="Bold" HorizontalAlignment="Center" Margin="5" TextTrimming="CharacterEllipsis"
                               Text="{Binding DataContext.DeployStep, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                               ToolTip="{Binding DataContext.DeployStep, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>

                    <TextBlock Margin="5" TextTrimming="CharacterEllipsis"
                               Text="{Binding DataContext.DeployDetails, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                               ToolTip="{Binding DataContext.DeployDetails, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>

                    <!-- Unhandled error -->
                    <TextBlock Margin="5" TextTrimming="CharacterEllipsis" Foreground="Red" FontWeight="Bold"
                               Text="{Binding DataContext.DeployUnhandledError, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" 
                               ToolTip="{Binding DataContext.DeployUnhandledError, RelativeSource={RelativeSource AncestorType=local:MainWindow}}" 
                               Visibility="{c:Binding DataContext.DeployEncounteredUnhandledError, FalseToVisibility=Collapsed, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>

                    <Expander Header="View details" Margin="5" Visibility="{c:Binding 'DataContext.DeployEncounteredUnhandledError and (DataContext.DeployUnhandledErrorDetails.Length > 0)', FalseToVisibility=Collapsed, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                        <TextBox MaxHeight="{c:Binding 'ActualHeight - 300', RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 Text="{Binding DataContext.DeployUnhandledErrorDetails, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                 IsReadOnly="True"/>
                    </Expander>

                    <!-- Handled errors -->
                    <TextBlock Margin="5" TextTrimming="CharacterEllipsis" Foreground="Red" FontWeight="Bold"
                               Text="{Binding DataContext.DeployHandledErrors, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                               ToolTip="{Binding DataContext.DeployHandledErrors, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                               Visibility="{c:Binding DataContext.DeployEncounteredHandledErrors, FalseToVisibility=Collapsed, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>

                    <Expander Header="View details" Margin="5" Visibility="{c:Binding 'DataContext.DeployEncounteredHandledErrors and (DataContext.DeployHandledErrorsDetails.Length > 0)', FalseToVisibility=Collapsed, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                        <TextBox MaxHeight="{c:Binding 'ActualHeight - 300', RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 Text="{Binding DataContext.DeployHandledErrorsDetails, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                 IsReadOnly="True"/>
                    </Expander>

                    <ProgressBar IsIndeterminate="{Binding DataContext.IndeterminateProgress, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                 Value="{Binding DataContext.DeployProgress, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                 Orientation="Horizontal" Height="20" HorizontalAlignment="Stretch" Margin="5"/>

                    <CheckBox Margin="5"
                              IsChecked="{Binding DataContext.Configuration.CloseDialogOnErrors, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                        <TextBlock Text="Automatically close after errors" ToolTip="Check to automatically close the dialog when a copy fails with errors" TextTrimming="CharacterEllipsis"/>
                    </CheckBox>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>

                        <Button Grid.Column="1" Margin="5" BorderBrush="Silver" Background="Transparent"
                                Command="{Binding DataContext.Commands.CancelDeployCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                Visibility="{c:Binding DataContext.DeployInProgress, FalseToVisibility=Collapsed, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                IsEnabled="{c:Binding '!DataContext.CancelRequested', RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                            <TextBlock Text="Cancel"/>
                        </Button>

                        <Button Grid.Column="1" Margin="5" BorderBrush="Silver" Background="Transparent"
                                Command="{Binding DataContext.Commands.CloseProgressCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                Visibility="{c:Binding '!DataContext.DeployInProgress', FalseToVisibility=Collapsed, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                            <TextBlock Text="Close"/>
                        </Button>
                    </Grid>
                </StackPanel>
            </DataTemplate>
        </xctk:BusyIndicator.BusyContentTemplate>
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>

        <Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ConfigurationColumn" Width="{Binding DataContext.Configuration.ConfigurationItemsWidth, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <local:SectionHeader Grid.Row="0" HeaderText="Configuration"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <local:MyButton Grid.Column="1" Width="35" Height="35" Margin="2.5" Command="{Binding DataContext.Commands.AddConfigurationItemCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                        ToolTip="Create new configuration" ImageSource="..\Images\add.png"/>

                            <local:MyButton Grid.Column="2" Width="35" Height="35" Margin="2.5" Command="{Binding DataContext.Commands.RemoveConfigurationItemCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                        ToolTip="Delete selected configuration" ImageSource="..\Images\remove.png"/>

                        </Grid>

                        <DockPanel Grid.Row="2">
                            <local:ConfigurationDataGrid DataContext="{Binding}" Background="White"/>
                        </DockPanel>

                        <Grid Grid.Row="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                            </Grid.RowDefinitions>

                            <Canvas Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                                    Background="LightGray" Height="2"/>

                            <local:MyButton Grid.Column="1" Width="25" Height="25" Command="{Binding DataContext.Commands.MoveConfigurationItemUpCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                            ToolTip="Move selected configuration item up"
                                            IsEnabled="{c:Binding 'DataContext.Configuration.SelectedConfigurationIndex>0', RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                            ImageSource="..\Images\up_arrow.png"/>

                            <local:MyButton Grid.Column="2" Width="25" Height="25" Command="{Binding DataContext.Commands.MoveConfigurationItemDownCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                            ToolTip="Move selected configuration item down"
                                            IsEnabled="{c:Binding 'DataContext.Configuration.SelectedConfigurationIndex less DataContext.Configuration.ConfigurationItems.Count-1 and DataContext.Configuration.SelectedConfigurationIndex>=0',
                                                        RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                            ImageSource="..\Images\down_arrow.png"/>

                        </Grid>
                    </Grid>

                    <Grid Grid.Row="1"  Margin="0,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <local:SectionHeader Grid.Row="0" HeaderText="Path Variables"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <local:MyButton Grid.Column="1" Grid.Row="0" Width="25" Height="25" Margin="3" Command="{Binding DataContext.Commands.AddPathVariableCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                        ToolTip="Add new path variable" ImageSource="..\Images\plus.png"/>

                            <local:MyButton Grid.Column="2" Grid.Row="0" Width="25" Height="25" Margin="3" Command="{Binding DataContext.Commands.RemovePathVariableCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                        ToolTip="Delete selected path variable" ImageSource="..\Images\minus.png"/>
                        </Grid>

                        <DockPanel Grid.Row="2">
                            <local:PathVariablesDataGrid DataContext="{Binding}" Background="White"/>
                        </DockPanel>

                    </Grid>

                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="DarkGray"
                              ShowsPreview="False" Height="5"/>

                </Grid>

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <local:SectionHeader HeaderText="Source Directory(s)"/>
                        <local:DirectoryCollectionEditor DataContext="{Binding DataContext.SelectedConfigurationItem.SourceDirectories, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>
                    </StackPanel>

                    <Grid Grid.Column="0" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TabControl Grid.ColumnSpan="2" x:Name="leftTabControl" ItemsSource="{Binding SelectedConfigurationItem.DirectoryPairs}"
                                SelectedIndex="{Binding TabControlSelectedIndex}" SelectionChanged="TabControl_SelectionChanged" SelectedItem="{Binding LeftSelectedDirectoryPair}"
                                Style="{DynamicResource LeftTabControlStyle}">

                            <TabControl.ItemContainerStyle>
                                <Style TargetType="TabItem">
                                    <Setter Property="Header" Value="{Binding ShortName}"/>
                                    <Setter Property="ToolTip" Value="{Binding Name}"/>
                                </Style>
                            </TabControl.ItemContainerStyle>

                            <TabControl.ContentTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <local:FilesDataGrid ItemsSource="{Binding LeftFileCollection.Files, IsAsync=True}"
                                                         ScrollChanged="FilesDataGrid_ScrollChanged"/>
                                    </DockPanel>
                                </DataTemplate>
                            </TabControl.ContentTemplate>

                        </TabControl>

                        <TextBlock x:Name="leftTabControlCountLabel" Grid.Column="1" Text="{Binding LeftSelectedDirectoryPair.LeftFileCollection.CountLabel}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,10,0"/>
                    </Grid>


                    <StackPanel Grid.Column="1" Grid.Row="0">
                        <local:SectionHeader HeaderText="Destination Directory(s)"/>
                        <local:DirectoryCollectionEditor DataContext="{Binding DataContext.SelectedConfigurationItem.DestinationDirectories, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"/>
                    </StackPanel>

                    <Grid Grid.Column="1" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TabControl Grid.ColumnSpan="2" x:Name="rightTabControl" ItemsSource="{Binding SelectedConfigurationItem.DirectoryPairs}"
                                SelectedIndex="{Binding TabControlSelectedIndex}" SelectionChanged="TabControl_SelectionChanged" SelectedItem="{Binding RightSelectedDirectoryPair}"
                                Style="{DynamicResource RightTabControlStyle}">

                            <TabControl.ItemContainerStyle>
                                <Style TargetType="TabItem">
                                    <Setter Property="Header" Value="{Binding ShortName}"/>
                                    <Setter Property="ToolTip" Value="{Binding Name}"/>
                                </Style>
                            </TabControl.ItemContainerStyle>

                            <TabControl.ContentTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <local:FilesDataGrid ItemsSource="{Binding RightFileCollection.Files, IsAsync=True}"
                                                         ScrollChanged="FilesDataGrid_ScrollChanged"/>
                                    </DockPanel>
                                </DataTemplate>
                            </TabControl.ContentTemplate>
                        </TabControl>

                        <TextBlock x:Name="rightTabControlCountLabel" Grid.Column="1" Text="{Binding RightSelectedDirectoryPair.RightFileCollection.CountLabel}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,10,0"/>

                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="0" Background="RoyalBlue">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="125"/>
                            <ColumnDefinition Width="{c:Binding 'DeployEncounteredHandledErrors?10:0'}"/>
                            <ColumnDefinition Width="{c:Binding 'DeployEncounteredHandledErrors?40:0'}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="1" Background="White"
                            ToolTip="{Binding DataContext.DeployButtonTooltip, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                            Command="{Binding DataContext.Commands.DeployCommand, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                            Visibility="{c:Binding 'DataContext.SelectedConfigurationItem!=null', RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0" Source="..\Images\arrow.png" Margin="-10,2,10,2"/>

                                <Grid Grid.Column="1" VerticalAlignment="Stretch">
                                    <TextBlock Text="Deploy" VerticalAlignment="Center" FontSize="15" Margin="0,-2,0,0"/>
                                </Grid>
                            </Grid>
                        </Button>

                        <Button Grid.Column="3" Background="White" ToolTip="View last error details"
                                Command="{Binding Commands.ViewLastErrorCommand}">
                            <Image Source="..\Images\alert.png" Margin="2"/>
                        </Button>
                    </Grid>

                    <Grid Grid.Row="2" Grid.Column="1" Background="RoyalBlue"/>

                    <local:MyGridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"/>

                    <!--<Button x:Name="DeployButton" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Width="50" Height="50" 
                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
                        ToolTip="{Binding DataContext.DeployButtonTooltip, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                    <StackPanel>
                        <Image Source="..\Images\arrow_shadow.png"/>
                    </StackPanel>

                    <Button.Triggers>
                        <EventTrigger RoutedEvent="local:MyButton.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Width"
                                        Duration="0:0:0.1"
                                        From="50" To="100"/>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Height"
                                        Duration="0:0:0.1"
                                        From="50" To="100"/>
                                    -->
                    <!--<ThicknessAnimation
                                        Storyboard.TargetProperty="Margin"
                                        Duration="0:0:0.1"
                                        From="-25,0,0,45" To="-50,0,0,25"/>-->
                    <!--
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="local:MyButton.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Width"
                                        Duration="0:0:0.1"
                                        From="100" To="50"/>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Height"
                                        Duration="0:0:0.1"
                                        From="100" To="50"/>
                                    -->
                    <!--<ThicknessAnimation
                                        Storyboard.TargetProperty="Margin"
                                        Duration="0:0:0.1"
                                        From="-50,0,0,25" To="-25,0,0,45"/>-->
                    <!--
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>

                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="Transparent"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>-->
                </Grid>

                <local:MyGridSplitter Grid.Column="1"/>
            </Grid>
        </Grid>
    </xctk:BusyIndicator>
</Window>
